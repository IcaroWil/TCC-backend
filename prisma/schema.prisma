// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?
  role      UserRole @default(CLIENT)
  avatar    String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  appointments Appointment[]
  createdServices Service[] @relation("ServiceCreator")

  @@map("users")
}

model Service {
  id          String  @id @default(cuid())
  name        String
  description String?
  duration    Int     // duração em minutos
  price       Float?
  isActive    Boolean @default(true)
  color       String? // cor para o calendário
  category    String?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamentos
  createdBy    String
  creator      User @relation("ServiceCreator", fields: [createdBy], references: [id])
  appointments Appointment[]

  @@map("services")
}

model Appointment {
  id          String            @id @default(cuid())
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  status      AppointmentStatus @default(SCHEDULED)
  notes       String?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamentos
  clientId  String
  client    User    @relation(fields: [clientId], references: [id])
  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  // Campos para clientes não cadastrados
  clientName  String?
  clientEmail String?
  clientPhone String?

  @@map("appointments")
}

model BusinessHours {
  id        String    @id @default(cuid())
  dayOfWeek Int       // 0 = Domingo, 1 = Segunda, etc.
  startTime String    // HH:mm formato
  endTime   String    // HH:mm formato
  isActive  Boolean   @default(true)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([dayOfWeek])
  @@map("business_hours")
}

model Holiday {
  id          String   @id @default(cuid())
  date        DateTime @unique
  name        String
  description String?
  isRecurring Boolean  @default(false) // para feriados anuais
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("holidays")
}

model TimeSlot {
  id        String   @id @default(cuid())
  date      DateTime
  startTime String   // HH:mm formato
  endTime   String   // HH:mm formato
  isBlocked Boolean  @default(false)
  reason    String?  // motivo do bloqueio
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([date, startTime])
  @@map("time_slots")
}

model Settings {
  id    String @id @default(cuid())
  key   String @unique
  value String
  type  String @default("string") // string, number, boolean, json
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("settings")
}

enum UserRole {
  CLIENT
  ADMIN
  SUPER_ADMIN
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  NO_SHOW
}