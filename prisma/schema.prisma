generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  phone     String?   // Optional phone number for WhatsApp notifications
  role      Role      @default(CUSTOMER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  appointments Appointment[]
}

model Service {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  duration    Int?      // Duration in minutes
  startTime   String?   // e.g. "09:00"
  endTime     String?   // e.g. "18:00"
  interval    Int?      // Interval in minutes
  daysOfWeek  String[]  // e.g. ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY"]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  appointments Appointment[]
  schedules   Schedule[]
}

model Schedule {
  id          Int       @id @default(autoincrement())
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   Int
  date        DateTime
  startTime   String    // e.g. "09:00"
  endTime     String    // e.g. "10:00"
  isAvailable Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  appointments Appointment[]
  
  @@unique([serviceId, date, startTime])
}

model Appointment {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  schedule    Schedule  @relation(fields: [scheduleId], references: [id])
  scheduleId  Int
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   Int
  status      AppointmentStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  ADMIN
  CUSTOMER
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
}